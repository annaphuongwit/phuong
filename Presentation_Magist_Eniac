use magist;

select product_category_name as product_name, round(sum(price),2) as total_price from products 
join order_items on products.product_id = order_items.product_id
group by product_name;



select products.product_id as product_id,  product_category_name as product_name from products 
join order_items on products.product_id = order_items.product_id
group by product_id;

CREATE TABLE product_name_total_price (
    product_id int,
    product_name varchar(255),
    total_price float
);


INSERT INTO product_name_total_price (product_id)
VALUES (
(select count(products.product_id) from products 
join order_items on products.product_id = order_items.product_id
)
);


INSERT INTO product_name_total_price (product_id, product_name, total_price)
SELECT 
    p.product_id, 
    p.product_category_name AS product_name, 
    ROUND(SUM(oi.price), 2) AS total_price
FROM products p
JOIN order_items oi ON p.product_id = oi.product_id
GROUP BY p.product_id, p.product_category_name
ORDER BY RANDOM()  -- Randomizes the selection
; 


select product_id from product_name_total_price;
 

-- How many months of data are included in the magist database?
SELECT 
    TIMESTAMPDIFF(MONTH,
        MIN(order_purchase_timestamp),
        MAX(order_purchase_timestamp)
        ) AS num_months
FROM
    orders;
    
-- How many Tech sellers are there? 
SELECT 
    COUNT(DISTINCT seller_id)
FROM
    sellers
        LEFT JOIN
    order_items USING (seller_id)
        LEFT JOIN
    products p USING (product_id)
        LEFT JOIN
    product_category_name_translation pt USING (product_category_name)
WHERE
    pt.product_category_name_english IN ('audio' , 'electronics', 'computers_accessories',
        'pc_gamer', 'computers', 'tablets_printing_image', 'telephony');
        
-- How many sellers are there? 
SELECT 
    COUNT(DISTINCT seller_id)
FROM
    sellers;
    
-- What is the total amount earned by all sellers? 
	-- we use price from order_items and not payment_value from order_payments as an order may contain tech and non tech product. With payment_value we can't distinguish between items in an order
SELECT 
    SUM(oi.price) AS total
FROM
    order_items oi
        LEFT JOIN
    orders o USING (order_id)
WHERE
    o.order_status NOT IN ('unavailable' , 'canceled');

-- What is the total amount earned by all Tech sellers?
SELECT 
    SUM(oi.price) AS total
FROM
    order_items oi
        LEFT JOIN
    orders o USING (order_id)
        LEFT JOIN
    products p USING (product_id)
        LEFT JOIN
    product_category_name_translation pt USING (product_category_name)
WHERE
    o.order_status NOT IN ('unavailable' , 'canceled')
        AND 
	pt.product_category_name_english IN ('audio' , 'electronics', 'computers_accessories',
        'pc_gamer', 'computers', 'tablets_printing_image', 'telephony');
	
    /*******************************************/

        
WITH RECURSIVE magist_sellers as (
-- tech_sellers_earn as (
-- What is the total amount earned by all Tech sellers?
SELECT 
    SUM(oi.price) AS total
FROM
    order_items oi
        LEFT JOIN
    orders o USING (order_id)
        LEFT JOIN
    products p USING (product_id)
        LEFT JOIN
    product_category_name_translation pt USING (product_category_name)
WHERE
    o.order_status NOT IN ('unavailable' , 'canceled')
        AND 
	pt.product_category_name_english IN ('audio' , 'electronics', 'computers_accessories',
        'pc_gamer', 'computers', 'tablets_printing_image', 'telephony')
-- ),
-- all_sellers_earn as (
-- What is the total amount earned by all sellers? 
	-- we use price from order_items and not payment_value from order_payments as an order may contain tech and non tech product. With payment_value we can't distinguish between items in an order
  UNION ALL
SELECT 
    SUM(oi.price) AS total
FROM
    order_items oi
        LEFT JOIN
    orders o USING (order_id)
WHERE
    o.order_status NOT IN ('unavailable' , 'canceled')
)

 select total from magist_sellers ;



/******************************************/

WITH techS_earn as (
 
-- What is the total amount earned by all Tech sellers?
SELECT 
    oi.price AS techS_earned, pt.product_category_name_english, oi.seller_id
 --  oi.price AS total_techS_earn, oi.seller_id
FROM
    order_items oi
        LEFT JOIN
    orders o USING (order_id)
        LEFT JOIN
    products p USING (product_id)
         JOIN
    product_category_name_translation pt USING (product_category_name)
WHERE
    o.order_status NOT IN ('unavailable' , 'canceled')
        AND 
	-- pt.product_category_name_english IN ('audio' , 'electronics', 'computers_accessories',
     --   'pc_gamer', 'computers', 'tablets_printing_image', 'telephony')
        pt.product_category_name_english IN ( 'telephony')
-- group by pt.product_category_name_english
order by techS_earned desc limit 14
 ),
 allS_earn as (
-- What is the total amount earned by all sellers? 
	-- we use price from order_items and not payment_value from order_payments as an order may contain tech and non tech product. With payment_value we can't distinguish between items in an order
SELECT 
    SUM(oi.price) AS total_allS_earn
FROM
    order_items oi
        LEFT JOIN
    orders o USING (order_id)
WHERE
    o.order_status NOT IN ('unavailable' , 'canceled')
),
totalSeller as (
-- How many sellers are there? 
SELECT 
    COUNT(DISTINCT seller_id) as all_sellers_count
FROM
    sellers
),
techSeller as (
SELECT 
    COUNT(DISTINCT seller_id) as tech_sellers_count
FROM
    sellers
        LEFT JOIN
    order_items USING (seller_id)
        LEFT JOIN
    products p USING (product_id)
        LEFT JOIN
    product_category_name_translation pt USING (product_category_name)
WHERE
    pt.product_category_name_english IN ('audio' , 'electronics', 'computers_accessories',
        'pc_gamer', 'computers', 'tablets_printing_image', 'telephony')
)

 select total_techS_earn, total_allS_earn, all_sellers_count, tech_sellers_count from techS_earn , allS_earn, totalSeller,techSeller   ;
